scalar Cursor
scalar JSON

input FilterInput {
    id: KeywordFilterInput
}

input KeywordFilterInput {
    in: [String!]
}

type PageInfo {
    endCursor: String
    startCursor: String
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
}

type ProductConnection {
    edges: [ProductEdge]
    pageInfo: PageInfo!
}

type ProductEdge {
    cursor: String!
    node: Product
}

type Product @key(fields: "id") {
    id: ID!
    name: String
    brand: Brand
    category: Category
}

extend type Brand @key(fields: "id") {
    id: ID! @external
}

extend type Category @key(fields: "id") {
    id: ID! @external
}

extend type ProductRecommendation @key(fields: "algorithmVersion") {
    algorithmVersion: String! @external
    ids: [ID!] @external
    products(
        after: String
        before: String
        first: Int
        last: Int
        where: FilterInput
    ): ProductConnection @requires(fields: "ids")
}

extend type Query {
    productById(id: ID!): Product
    connectedProducts(
        after: String
        before: String
        first: Int
        last: Int
        where: FilterInput
    ): ProductConnection
}
